[{"/mnt/d/Desktop/WIP/home-automation/client/src/index.js":"1","/mnt/d/Desktop/WIP/home-automation/client/src/reportWebVitals.js":"2","/mnt/d/Desktop/WIP/home-automation/client/src/App.js":"3","/mnt/d/Desktop/WIP/home-automation/client/src/components/HorizontalNav2.js":"4","/mnt/d/Desktop/WIP/home-automation/client/src/theme/theme.js":"5","/mnt/d/Desktop/WIP/home-automation/client/src/components/TemperatureHumidityCard.js":"6","/mnt/d/Desktop/WIP/home-automation/client/src/components/RelayCard.js":"7","/mnt/d/Desktop/WIP/home-automation/client/src/components/MQTT.js":"8","/mnt/d/Desktop/WIP/home-automation/client/src/components/Sensor.js":"9","/mnt/d/Desktop/WIP/home-automation/client/src/components/AlertMessage.js":"10","/mnt/d/Desktop/WIP/home-automation/client/src/components/FetcherMQTT.js":"11","/mnt/d/Desktop/WIP/home-automation/client/src/components/Sensors.js":"12","/mnt/d/Desktop/WIP/home-automation/client/src/components/MiddleBar.js":"13","/mnt/d/Desktop/WIP/home-automation/client/src/components/FilterByButton.js":"14","/mnt/d/Desktop/WIP/home-automation/client/src/components/Login.js":"15","/mnt/d/Desktop/WIP/home-automation/client/src/utils/Common.js":"16","/mnt/d/Desktop/WIP/home-automation/client/src/utils/PublicRoute.js":"17","/mnt/d/Desktop/WIP/home-automation/client/src/utils/PrivateRoute.js":"18","/mnt/d/Desktop/WIP/home-automation/client/src/components/Dashboard.js":"19","/mnt/d/Desktop/WIP/home-automation/client/src/components/DialogFilterBy.js":"20"},{"size":678,"mtime":1608134068832,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607907510898,"results":"23","hashOfConfig":"22"},{"size":1332,"mtime":1610123036083,"results":"24","hashOfConfig":"22"},{"size":5559,"mtime":1610053459945,"results":"25","hashOfConfig":"22"},{"size":1148,"mtime":1608324676282,"results":"26","hashOfConfig":"22"},{"size":1715,"mtime":1608574920456,"results":"27","hashOfConfig":"22"},{"size":1756,"mtime":1608587946673,"results":"28","hashOfConfig":"22"},{"size":1913,"mtime":1608589288343,"results":"29","hashOfConfig":"22"},{"size":1176,"mtime":1608476864024,"results":"30","hashOfConfig":"22"},{"size":1385,"mtime":1608679723622,"results":"31","hashOfConfig":"22"},{"size":4041,"mtime":1610123774702,"results":"32","hashOfConfig":"22"},{"size":864,"mtime":1610214242438,"results":"33","hashOfConfig":"22"},{"size":2686,"mtime":1610216970630,"results":"34","hashOfConfig":"22"},{"size":1543,"mtime":1609865823417,"results":"35","hashOfConfig":"22"},{"size":4642,"mtime":1610211932252,"results":"36","hashOfConfig":"22"},{"size":721,"mtime":1610040779360,"results":"37","hashOfConfig":"22"},{"size":455,"mtime":1610046079185,"results":"38","hashOfConfig":"22"},{"size":422,"mtime":1610053266438,"results":"39","hashOfConfig":"22"},{"size":630,"mtime":1610046478377,"results":"40","hashOfConfig":"22"},{"size":3302,"mtime":1610218936381,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jkh3hr",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/d/Desktop/WIP/home-automation/client/src/index.js",[],["86","87"],"/mnt/d/Desktop/WIP/home-automation/client/src/reportWebVitals.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/App.js",["88"],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport PublicRoute from \"./utils/PublicRoute\";\nimport Dashboard from \"./components/Dashboard\";\nimport { getToken, removeUserSession, setUserSession } from \"./utils/Common\";\nimport axios from 'axios';\nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      return;\n    }\n\n    axios\n      .get(`http://localhost:5000/api/verifyToken?token=${token}`)\n      .then((response) => {\n        setUserSession(response.data.token, response.data.user);\n        setAuthLoading(false);\n      })\n      .catch((error) => {\n        removeUserSession();\n        setAuthLoading(false);\n      });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>;\n  }\n  return (\n    <Router>\n      <Switch>\n        {/* <Route exact path=\"/\" component={Home} /> */}\n\n        <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n        <PublicRoute path=\"/\" component={Login} />\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","/mnt/d/Desktop/WIP/home-automation/client/src/components/HorizontalNav2.js",["89"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DirectionsBusIcon from \"@material-ui/icons/DirectionsBus\";\nimport NotificationImportantIcon from \"@material-ui/icons/NotificationImportant\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {withRouter} from 'react-router-dom';\n\nimport { getUser, removeUserSession } from '../utils/Common';\n\nimport Logo from \"../assets/smart-house.svg\";\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    minHeight: 70,\n  },\n  brand: {\n    lineHeight: 1,\n    paddingTop: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    marginRight: \"auto\",\n  },\n  link: {\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  primaryAction: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  iconWrapper: {\n    minWidth: 40,\n  },\n  icon: {\n    color: theme.palette.text.hint,\n  },\n  drawerContainer: {\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(3),\n    width: 300,\n  },\n}));\n\nfunction Navigation(props) {\n  const classes = useStyles();\n\n  const content = {\n    brand: { image: { Logo }, width: 110 },\n    link3: \"Section Three\",\n    link4: \"Section Four\",\n    \"primary-action\": \"Action\",\n    ...props.content,\n  };\n\n  let brand;\n\n  if (content.brand.image) {\n    brand = (\n      <img src={content.brand.image} alt=\"\" width={content.brand.width} />\n    );\n  } else {\n    brand = content.brand.text || \"\";\n  }\n\n  const [state, setState] = React.useState({ open: false });\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, open });\n  };\n\n  // Logout \n  const user = getUser();\n \n  // handle click event of logout button\n  const handleLogout = () => {\n    removeUserSession();\n    props.history.push('/login');\n  }\n\n\n  return (\n    <AppBar position=\"static\" color=\"inherit\">\n      <Toolbar className={classes.toolbar}>\n        <Link\n          href=\"/\"\n          component={RouterLink}\n          to=\"/\"\n          color=\"primary\"\n          underline=\"none\"\n          variant=\"h5\"\n          className={classes.brand}\n        >\n          {brand}\n        </Link>\n        <Link\n          href=\"#\"\n          color=\"textPrimary\"\n          variant=\"body2\"\n          className={classes.link}\n        >\n          {content[\"link3\"]}\n        </Link>\n        <Link\n          href=\"#\"\n          color=\"textPrimary\"\n          variant=\"body2\"\n          className={classes.link}\n        >\n          {content[\"link4\"]}\n        </Link>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.primaryAction}\n          onClick={handleLogout}\n        >\n          {content[\"primary-action\"]}\n        </Button>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          className={classes.menuButton}\n          onClick={toggleDrawer(true)}\n        >\n          <MenuIcon />\n        </IconButton>\n      </Toolbar>\n      <Drawer anchor=\"left\" open={state.open} onClose={toggleDrawer(false)}>\n        <div className={classes.drawerContainer}>\n          <Box\n            mb={1}\n            ml={2}\n            pb={2}\n            border={1}\n            borderTop={0}\n            borderLeft={0}\n            borderRight={0}\n            borderColor=\"background.emphasis\"\n          >\n            <Link\n              href=\"#\"\n              color=\"primary\"\n              underline=\"none\"\n              variant=\"h5\"\n              className={classes.linkBrand}\n            >\n              {brand}\n            </Link>\n          </Box>\n          <List>\n            <ListItem button key={content[\"link3\"]}>\n              <ListItemIcon className={classes.iconWrapper}>\n                <DirectionsBusIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText primary={content[\"link3\"]} />\n            </ListItem>\n            <ListItem button key={content[\"link4\"]}>\n              <ListItemIcon className={classes.iconWrapper}>\n                <NotificationImportantIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText primary={content[\"link4\"]} />\n            </ListItem>\n          </List>\n          <Box\n            mt={1}\n            ml={2}\n            pt={3}\n            border={1}\n            borderBottom={0}\n            borderLeft={0}\n            borderRight={0}\n            borderColor=\"background.emphasis\"\n          >\n            <Button onClick={handleLogout} variant=\"contained\" color=\"secondary\" fullWidth>\n              {content[\"primary-action\"]}\n            </Button>\n          </Box>\n        </div>\n      </Drawer>\n    </AppBar>\n  );\n}\n\nexport default withRouter(Navigation);","/mnt/d/Desktop/WIP/home-automation/client/src/theme/theme.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/TemperatureHumidityCard.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/RelayCard.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/MQTT.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/Sensor.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/AlertMessage.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/FetcherMQTT.js",["90"],"import axios from \"axios\";\nimport mqttService from \"./MQTT\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AlertMessage from \"./AlertMessage\";\nimport MiddleBar from \"./MiddleBar\";\n\nconst URL = \"http://localhost:5000/active-sensors\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n}));\n\nconst FetcherΜQTT = () => {\n  const classes = useStyles();\n\n  const [data, setData] = useState({ sensors: [] });\n  const dataRef = useRef(data);\n\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        // setData({ sensors: data.sensors, isFetching: true });\n        const response = await axios.get(URL);\n        setData({ sensors: response.data });\n        for (const sensor of response.data) {\n          // console.log(sensor)\n          if (sensor.type === \"temperature-humidity\") {\n            sensor.room = \"kitchen\";\n          }\n        }\n        dataRef.current = { sensors: response.data };\n\n        for (const sensor of response.data) {\n          mqttService.subscribe(client, sensor.pubTopic);\n        }\n      } catch (error) {\n        console.log(error);\n        setData({ sensors: [] });\n      }\n    };\n\n    fetchDevices();\n\n    const messageHandler = (client, topic, payload) => {\n      if (topic === \"browser\") {\n        const infoObj = JSON.parse(payload.toString());\n        if (infoObj.action === \"disconnected\") {\n          const newData = {\n            sensors: dataRef.current.sensors.filter((sensor) => {\n              if (sensor.deviceId === infoObj.deviceId) {\n                mqttService.unsubscribe(client, sensor.pubTopic);\n              }\n              return sensor.deviceId !== infoObj.deviceId;\n            }),\n            alertMessage: {\n              // show: true,\n              device: infoObj.deviceId,\n              reason: infoObj.action,\n            },\n          };\n          dataRef.current = newData;\n          setData(newData);\n        } else if (infoObj.action === \"connected\") {\n          const existingSensor = dataRef.current.sensors.find(\n            (el) => el.deviceId === infoObj.newSensors[0].deviceId\n          );\n          if (existingSensor) {\n            console.log(\"Exists!!! No action taken!\");\n            return;\n          } else {\n            const newData = {\n              sensors: dataRef.current.sensors.concat(infoObj.newSensors),\n              alertMessage: {\n                // show: true,\n                device: infoObj.newSensors[0].deviceId,\n                reason: infoObj.action,\n              },\n            };\n            for (const sensor of infoObj.newSensors) {\n              mqttService.subscribe(client, sensor.pubTopic);\n            }\n            dataRef.current = newData;\n            setData(newData);\n          }\n        }\n        return;\n      }\n      const message = payload.toString();\n\n      const newData = {\n        sensors: dataRef.current.sensors.map((sensorItem) => {\n          // console.log(\"SensorItem\", sensorItem);\n\n          if (sensorItem.pubTopic === topic) {\n            if (sensorItem.type === \"temperature-humidity\") {\n              const splitStr = message.split(\"-\");\n              sensorItem.currentMeasurement = {\n                temperature: splitStr[0],\n                humidity: splitStr[1],\n                // timestamp: getFixedDate(),\n              };\n            }\n          }\n          return sensorItem;\n        }),\n      };\n      dataRef.current = newData;\n      setData(newData);\n    };\n\n    const client = mqttService.getClient(() => {});\n\n    mqttService.onMessage(client, (client, topic, payload) =>\n      messageHandler(client, topic, payload)\n    );\n  }, []);\n\n  // const rooms = [...new Set(data.sensors.map((sensor) => sensor.room))];\n  return (\n    <main>\n      <AlertMessage alertMessage={data.alertMessage} />\n      <MiddleBar sensors={data.sensors} />\n    </main>\n  );\n};\n\nexport default FetcherΜQTT;\n","/mnt/d/Desktop/WIP/home-automation/client/src/components/Sensors.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/MiddleBar.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/FilterByButton.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/Login.js",["91"],"/mnt/d/Desktop/WIP/home-automation/client/src/utils/Common.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/utils/PublicRoute.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/utils/PrivateRoute.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/Dashboard.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/DialogFilterBy.js",["92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":18,"nodeType":"99","messageId":"100","endLine":5,"endColumn":23},{"ruleId":"97","severity":1,"message":"101","line":100,"column":9,"nodeType":"99","messageId":"100","endLine":100,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":19,"column":9,"nodeType":"99","messageId":"100","endLine":19,"endColumn":16},{"ruleId":"97","severity":1,"message":"103","line":66,"column":10,"nodeType":"99","messageId":"100","endLine":66,"endColumn":17},{"ruleId":"97","severity":1,"message":"104","line":35,"column":20,"nodeType":"99","messageId":"100","endLine":35,"endColumn":33},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'classes' is assigned a value but never used.","'loading' is assigned a value but never used.","'selectedValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]