[{"/mnt/d/Desktop/WIP/home-automation/client/src/index.js":"1","/mnt/d/Desktop/WIP/home-automation/client/src/reportWebVitals.js":"2","/mnt/d/Desktop/WIP/home-automation/client/src/App.js":"3","/mnt/d/Desktop/WIP/home-automation/client/src/pages/Index.js":"4","/mnt/d/Desktop/WIP/home-automation/client/src/components/HorizontalNav2.js":"5","/mnt/d/Desktop/WIP/home-automation/client/src/theme/theme.js":"6","/mnt/d/Desktop/WIP/home-automation/client/src/components/Main.js":"7","/mnt/d/Desktop/WIP/home-automation/client/src/components/TemperatureHumidityCard.js":"8","/mnt/d/Desktop/WIP/home-automation/client/src/components/RelayCard.js":"9","/mnt/d/Desktop/WIP/home-automation/client/src/components/FetcherHOC.js":"10","/mnt/d/Desktop/WIP/home-automation/client/src/components/MQTT.js":"11"},{"size":678,"mtime":1608134068832,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607907510898,"results":"14","hashOfConfig":"13"},{"size":350,"mtime":1608043249588,"results":"15","hashOfConfig":"13"},{"size":716,"mtime":1608155432626,"results":"16","hashOfConfig":"13"},{"size":5446,"mtime":1608155470947,"results":"17","hashOfConfig":"13"},{"size":1148,"mtime":1608324676282,"results":"18","hashOfConfig":"13"},{"size":986,"mtime":1608209256794,"results":"19","hashOfConfig":"13"},{"size":1834,"mtime":1608324031515,"results":"20","hashOfConfig":"13"},{"size":1817,"mtime":1608155643282,"results":"21","hashOfConfig":"13"},{"size":2630,"mtime":1608401231039,"results":"22","hashOfConfig":"13"},{"size":1503,"mtime":1608398714865,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jkh3hr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/mnt/d/Desktop/WIP/home-automation/client/src/index.js",[],["50","51"],"/mnt/d/Desktop/WIP/home-automation/client/src/reportWebVitals.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/App.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/pages/Index.js",["52"],"import React from \"react\";\n\nimport HorizontalNav2 from \"../components/HorizontalNav2\";\nimport Main from \"../components/Main\";\nimport Logo from \"../assets/smart-house.svg\"\n\nexport default function Index() {\n  return (\n    <React.Fragment>\n      <HorizontalNav2\n        content={{\n          brand: {\n            text: \"Home Automation\",\n            // image: {Logo},\n            image:\n              \"https://www.flaticon.com/svg/static/icons/svg/3063/3063654.svg\",\n            width: \"110\",\n          },\n          link1: \"All Sensors\",\n          link2: \"Rooms\",\n          link3: \"Actions\",\n          link4: \"User\",\n          \"primary-action\": \"Log Out\",\n        }}\n      />\n      <Main/>\n    </React.Fragment>\n  );\n}\n","/mnt/d/Desktop/WIP/home-automation/client/src/components/HorizontalNav2.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/theme/theme.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/Main.js",[],"/mnt/d/Desktop/WIP/home-automation/client/src/components/TemperatureHumidityCard.js",["53"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n// import CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport icon from \"../assets/thermometer.png\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 122,\n    display: \"flex\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  media: {\n    marginLeft: 12,\n    width: 122,\n    height: 122,\n    \n  },\n  degrees: {\n    textAlign: 'center',\n  }\n}));\n\nexport default function OutlinedCard(props) {\n  const classes = useStyles();\n  \n  \n  const content = {\n    roomName: 'roomName',\n    device: 'deviceId',\n    temperature: \"-\" ,\n    humidity: \"-\",\n    ...props.content\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      {/* <CardHeader title=\"Sensor\" /> */}\n\n      <CardContent>\n        <Typography className={classes.title} color=\"secondary\" gutterBottom>\n         {props.roomName}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          TempHum\n        </Typography>\n        <Typography className={classes.pos} color=\"secondary\">\n        {props.device}\n        </Typography>\n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        image={icon}\n        title=\"Temperature\"\n      />\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.degrees} >\n          {props.temperature} &#8451;\n          <br />\n          \n        </Typography>\n        <Typography variant=\"h5\" className={classes.degrees} >\n          {props.humidity} %\n          <br />\n          </Typography>\n\n      </CardContent>\n    </Card>\n  );\n}\n","/mnt/d/Desktop/WIP/home-automation/client/src/components/RelayCard.js",["54","55"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport LightBulbIcon from \"../assets/lightbulb.png\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 122,\n    display: \"flex\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  media: {\n    marginLeft: 12,\n    width: 122,\n    height: 122,\n  },\n  degrees: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default function OutlinedCard(props) {\n  const classes = useStyles();\n\n  const content = {\n    roomName: \"roomName\",\n    device: \"deviceId\",\n    ...props.content,\n  };\n  const roomsUrl = \"http://localhost:5000/api/rooms/\";\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      {/* <CardHeader title=\"Sensor\" /> */}\n\n      <CardContent>\n        <Typography className={classes.title} color=\"secondary\" gutterBottom>\n          {content.roomName}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Lightbulb\n        </Typography>\n        <Typography className={classes.pos} color=\"secondary\">\n          {content.device}\n        </Typography>\n        <Switch\n          onChange={() => {\n            fetch(roomsUrl)\n              .then((res) => res.json())\n              .then((result) => {\n                console.log(result);\n              });\n          }}\n        />\n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        image={LightBulbIcon}\n        title=\"Lightbulb\"\n      />\n    </Card>\n  );\n}\n","/mnt/d/Desktop/WIP/home-automation/client/src/components/FetcherHOC.js",["56","57"],"/mnt/d/Desktop/WIP/home-automation/client/src/components/MQTT.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":35,"column":9,"nodeType":"64","messageId":"65","endLine":35,"endColumn":16},{"ruleId":"62","severity":1,"message":"67","line":2,"column":22,"nodeType":"64","messageId":"65","endLine":2,"endColumn":30},{"ruleId":"62","severity":1,"message":"68","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":18},{"ruleId":"62","severity":1,"message":"69","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":62,"column":6,"nodeType":"72","endLine":62,"endColumn":8,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'content' is assigned a value but never used.","'useTheme' is defined but never used.","'CardHeader' is defined but never used.","'RelayCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [data]",{"range":"79","text":"80"},[1910,1912],"[data]"]